server:
  port: 5000
spring:
  mvc:
    path match:
      matching-strategy: ant_path_matcher
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://db-sodam.cj557j0pfgbg.ap-northeast-2.rds.amazonaws.com:3306/sodam?serverTimezone=UTC&characterEncoding=UTF-8
    username: admin
    password: sodam0118

  jpa:
    database: mysql   # ?? ?? ??
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect # ?? ?? ??
    show-sql: true   # sql ??? ????.
    hibernate:
      ddl-auto: update

  redis:
    host: localhost
    port: 6379

  mail:
    host: smtp.gmail.com
    port: 587 # TLS
    username: ${MAIL_USERNAME} #앱 비밀번호 발급받은 google 계정
    password: ${MAIL_PW} #발급받은 앱 비밀번호
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true

  jackson:
    serialization:
      fail-on-empty-beans: false

<<<<<<< HEAD
  cloud:
    gcp:
      storage:
        bucket: stt-bucket-binu
      project-id: speachtotext-374807
      credentials:
        location: classpath:credentials/gcp-key.json


=======
>>>>>>> d12fddc2c2a750722d3708ace731ee6838a84934
auth:
  kakao:
    client-id: 9e0f9a70f672fba12b71ea1b5ec10e80
    redirect-uri: http://localhost:8080/auth/kakao/callback
    authorize-uri: https://kauth.kakao.com/oauth/authorize
    token-uri: https://kauth.kakao.com/oauth/token
    kakao-api-host: https://kapi.kakao.com

# 로그 레벨 설정
logging:
  level:
    # hibernate 가 남기는 모든 로그가 debug모드로 설정
    # jpa hibernate가 생성하는 sql이 로거를 통해서 찍히도록 하는 설정
    org.hibernate.SQL: debug
    org.hibernate.type: trace # 실제 들어가는 파라미터값 찍어주는 설정

jwt:
  # HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secret key를 사용
  # base64 encode
  secret-key: and0LXRvcC1zZWNyZXQtbG9sbG9sbG9sLXNwcmluZy1zZWN1cml0eS10b29vby1oYXJkLVRULUFNMDE1MS05ODc2NTQzMjE
  token-validity-in-seconds: 1800   # 30분
  refresh-token-validity-in-seconds: 604800
